stages:
  - build
  - deploy

build:
  image: docker:latest
  stage: build
  services:
    - docker:24.0.6-dind
  before_script:
    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:    
    - docker build --build-arg build_name=dev -f Idams.WebApi/Dockerfile -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  after_script:
    - docker logout ${CI_REGISTRY}
  only:
    - dev

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - chmod og= $APP_DEV_PRIV_KEY
    - apk update && apk add openssh-client
    - ssh -i $APP_DEV_PRIV_KEY -o StrictHostKeyChecking=no app-dev@$APP_DEV_SERVER "sudo docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}"
    - ssh -i $APP_DEV_PRIV_KEY -o StrictHostKeyChecking=no app-dev@$APP_DEV_SERVER "sudo docker container rm -f idams-be || true"
    - ssh -i $APP_DEV_PRIV_KEY -o StrictHostKeyChecking=no app-dev@$APP_DEV_SERVER "sudo docker rmi ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest || true"
    - ssh -i $APP_DEV_PRIV_KEY -o StrictHostKeyChecking=no app-dev@$APP_DEV_SERVER "sudo docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
    - ssh -i $APP_DEV_PRIV_KEY -o StrictHostKeyChecking=no app-dev@$APP_DEV_SERVER "sudo docker run -d -p 5600:80 -p 5601:443 -e ASPNETCORE_URLS=\"https://+;http://+\" -e ASPNETCORE_HTTPS_PORT=443 -e ASPNETCORE_ENVIRONMENT=dev -e ASPNETCORE_Kestrel__Certificates__Default__Password="1234" -e ASPNETCORE_Kestrel__Certificates__Default__Path=/https/solecode.pfx -v /root/idams/cert:/https/ -v /root/idams/data:/FileServer/ --network=app-dev --name idams-be ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
  only:
    - dev
